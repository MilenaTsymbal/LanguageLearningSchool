@using LanguageLearningSchool.Enums;
@using LanguageLearningSchool.ViewModels;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole> RoleManager
@model CourseDetailsViewModel
@{
    var currentUser = await UserManager.GetUserAsync(User);
    var LanguageColour = new Dictionary<Languages, string>
    {
    {Languages.English, "#FED6BC"},
    {Languages.Spanish, "#FFFADD"},
    {Languages.French, "#DEF7FE"},
    {Languages.German, "#E7ECFF"},
    {Languages.Chinese, "#C3FBD8"},
    {Languages.Japanese, "#FDEED9"},
    {Languages.Italian, "#F6FFF8"},
    {Languages.Portuguese, "#B5F2EA"},
    {Languages.Korean, "#C6D8FF"},
    };
    var currentColour = LanguageColour[Model.Course.Language];

    var currentUserHasAccess = Model.UsersAndCourse.Any(uc =>
        uc.CourseId == Model.Course.CourseId && currentUser.Id == uc.UserId &&
        (uc.DateOfCreation != null || uc.StartDate != null));
    bool isUserCreatedCourse = Model.UsersAndCourse.Any(uc => uc.CourseId ==
        Model.Course.CourseId && currentUser.Id == uc.UserId && uc.DateOfCreation != null);
    bool isUserRegistered = Model.UsersAndCourse.Any(uc => currentUser.Id == uc.UserId
        && Model.Course.CourseId == uc.CourseId && uc.StartDate != null);
    bool isCourseFinished = Model.Lessons.Any(l => l.IsTheLastLesson == true);
    var userAndCourse = Model.UsersAndCourse.Find(uc => currentUser.Id == uc.UserId && uc.CourseId == Model.Course.CourseId);

}
<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
    .courseDetail {
        width: 100%;
        align-items: stretch;
    }

    .courseBackgroundColour {
        width: 100%;
        height: 150px;
    }

    .courseInfo {
        display: flex;
        width: 100%;
    }

    .courseFullInfo {
        width: 70%;
        padding-left: 10px;
        padding-top: 10px;
    }

    .courseExtraInfo {
        width: 30%;
    }

    .courseButtons {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin-bottom: 10px;
    }

    .courseButtons a {
        margin-top: 10px;
        width: 140px;
    }

    .courseButtons button {
        margin-top: 10px;
        width: 140px;
    }

    .courseUsers {
        padding-left: 10px;
        padding-top: 10px;
    }

    .user {
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 30px;
        width: 100%;
    }

    .lesson {
        background-color: #EEEEEE;
        width: 98.5%;
        height: 60px;
        border-radius: 5px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-left: 10px;
        padding-right: 10px;
        margin-bottom: 10px;
    }

    .lessonInfo {
        width: 100%;
        height: 30px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        padding-right: 10px;
    }

    .lessonInfo a {
        width: 25px;
        height: 25px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .lessonInfo p {
        padding-top: 5px;
    }

    .courseEstimation {
        padding-left: 10px;
        padding-right: 10px;
        padding-top: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>
</head>

<body>
<div class="container">
    <div class="courseDetail">
        <div class="courseBackgroundColour"
            style="display: flex; justify-content: center; align-items: center; background-color: @currentColour;">
            <h5>@Model.Course.CourseName</h5>
        </div>
        <div class="courseInfo">
            <div class="courseFullInfo border">
                <p>Description:<br>@Model.Course.Description<br></p>
                <p>Language:<br>@Model.Course.Language<br></p>
                <p>Difficulty:<br>@Model.Course.DifficultyLevel<br></p>
                <br>
                @if (currentUserHasAccess)
                {
                    <div class="lessonInfo">
                        <p>Lessons:</p>
                        @if(isUserCreatedCourse || await UserManager.IsInRoleAsync(currentUser, Roles.Admin.ToString()))
                        {
                            if (!isCourseFinished)
                            {
                                <a asp-controller="Lesson" asp-action="Create" asp-route-courseId="@Model.Course.CourseId" 
                                    type="button" class="btn btn-sm btn-outline-secondary">+</a>
                            }
                                
                        }
                    </div>
                    @foreach (var lesson in Model.Lessons)
                    {
                        <div class="lesson">
                            <p style="padding-top: 13px;">@lesson.LessonName</p>
                            @if (Model.UserAndLessons.Any(userAndLesson => currentUser.Id == userAndLesson.UserId && lesson.LessonId == userAndLesson.LessonId))
                            {
                                <a asp-controller="Lesson" asp-action="Detail" asp-route-lessonId="@lesson.LessonId"
                                    asp-route-courseId="@Model.Course.CourseId" type="button"
                                    class="btn btn-sm btn-outline-secondary" style="width:140px;">Continue learning</a>
                            }
                            else
                            {
                                <a asp-controller="Lesson" asp-action="Detail" asp-route-lessonId="@lesson.LessonId"
                                    asp-route-courseId="@Model.Course.CourseId" type="button"
                                    class="btn btn-sm btn-outline-secondary" style="width:140px;">Start learning</a>
                            }
                       </div>
                    }
                }

            </div>
            <div class="courseExtraInfo border">

                @if (currentUser == null)
                {
                    <p><a asp-controller="Account" asp-action="Login"
                        class="link-danger link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover"
                        style="margin-top: 10px;">You need to log in</a></p>
                }

                @if (await UserManager.IsInRoleAsync(currentUser, Roles.Student.ToString()))
                {
                    @if (!isUserRegistered)
                    {
                        <div class="courseButtons">
                            <form method="post" asp-controller="Course" asp-action="AddUserToCourse" 
                                asp-route-courseId="@Model.Course.CourseId">
                                <button type="submit" class="btn btn-sm btn-outline-secondary" style="margin-left: 5px">Register</button>
                            </form>
                        </div>
                    }
                    else 
                    {
                        if(userAndCourse.GeneralEstimation != null)
                        {
                            <div class=courseEstimation>
                                <p>Grade for course:</p>
                                <p>@userAndCourse.GeneralEstimation</p>
                            </div>
                        }
                        else 
                        {
                            <div class="courseButtons">
                                <form method="post" asp-controller="Course" asp-action="RemoveUserFromCourse" 
                                    asp-route-courseId="@Model.Course.CourseId" asp-route-userId="@currentUser.Id">
                                    <button type="submit" class="btn btn-sm btn-outline-secondary" 
                                        style="background-color: #FE6C6C; margin-left: 5px">Leave this course</button>
                                </form>
                            </div>
                        }
                    }
                }
                else if (await UserManager.IsInRoleAsync(currentUser, Roles.Teacher.ToString()))
                {
                    if (isUserCreatedCourse)
                    {
                        <div class="courseButtons">
                            <a asp-controller="Course" asp-action="Edit" asp-route-id="@Model.Course.CourseId"
                                type="button" class="btn btn-sm btn-outline-secondary">Edit course info</a>
                            <a asp-controller="Course" asp-action="Delete" asp-route-id="@Model.Course.CourseId"
                                type="button" class="btn btn-sm btn-outline-secondary"
                                style="background-color: #FE6C6C;">Delete this course</a>
                        </div>
                    }
                }
                else if (await UserManager.IsInRoleAsync(currentUser, Roles.Admin.ToString()))
                {
                     
                    @if (!isUserCreatedCourse && !isUserRegistered)
                    {
                        <div class="courseButtons">
                            <form method="post" asp-controller="Course" asp-action="AddUserToCourse" 
                                asp-route-courseId="@Model.Course.CourseId">
                                <button type="submit" class="btn btn-sm btn-outline-secondary" style="margin-left: 5px">Register</button>
                                </form>
                        </div>
                    }
                    else if (isUserRegistered)
                    {
                        if(userAndCourse.GeneralEstimation != null)
                        {
                            <div class=courseEstimation>
                                <p>Grade for course:</p>
                                <p>@userAndCourse.GeneralEstimation</p>
                            </div>
                        }
                        else
                        {
                            <div class="courseButtons">
                                <form method="post" asp-controller="Course" asp-action="RemoveUserFromCourse" 
                                    asp-route-courseId="@Model.Course.CourseId" asp-route-userId="@currentUser.Id">
                                    <button type="submit" class="btn btn-sm btn-outline-secondary" 
                                        style="background-color: #FE6C6C; margin-left: 5px">Leave this course</button>
                                </form>
                            </div>
                        }
                    }
                    <div class="courseButtons">
                        <a asp-controller="Course" asp-action="Edit" asp-route-id="@Model.Course.CourseId"
                            class="btn btn-sm btn-outline-secondary">Edit course info</a>
                        <a asp-controller="Course" asp-action="Delete" asp-route-id="@Model.Course.CourseId"
                            type="button" class="btn btn-sm btn-outline-secondary"
                            style="background-color: #FE6C6C;">Delete this course</a>
                    </div>
                }

                <div class="courseUsers border-top">
                    <p>Teacher:<br>
                        @foreach (var user in Model.UsersAndCourse)
                        {
                            @if (user.DateOfCreation != null)
                            {

                            <a class="text-dark" asp-area="" asp-controller="User" asp-action="Detail"
                                asp-route-id="@user.User.Id">@user.User.Name @user.User.Surname</a>
                            }
                        }
                    </p>
                    <br>
                    @if(isUserCreatedCourse || await UserManager.IsInRoleAsync(currentUser, Roles.Admin.ToString()))
                    {
                        <p>Students:</p>
                        <p>Active students:</p>
                            @foreach (var user in Model.UsersAndCourse)
                            {
                                @if (user.GeneralEstimation == null)
                                {
                                    if (user.DateOfCreation == null)
                                    {
                                        <div class="user">
                                            <a class="text-dark" asp-area="" asp-controller="User" asp-action="Detail"
                                                asp-route-id="@user.User.Id">@user.User.Name @user.User.Surname</a>
                                            @if (await UserManager.IsInRoleAsync(currentUser, Roles.Admin.ToString()) ||
                                               isUserCreatedCourse)
                                            {
                                                <form method="post" asp-controller="Course" asp-action="RemoveUserFromCourse" 
                                                    asp-route-courseId="@Model.Course.CourseId" asp-route-userId="@user.User.Id">
                                                    <button type="submit" class="btn btn-sm btn-outline-secondary" 
                                                        style="background-color: #FE6C6C; width: 70px; height: 25px; margin-right:10px; 
                                                        display: flex; align-items: center; justify-content: center;">Remove</button>
                                                </form>
                                            }
                                        </div>
                                    }
                                }

                            }
                        <br>
                        <p>Students who passed the course:</p>
                            @foreach (var user in Model.UsersAndCourse)
                            {
                                @if (user.GeneralEstimation != null)
                                {
                                    if (user.DateOfCreation == null)
                                    {
                                        <div class="user">
                                            <a class="text-dark" asp-area="" asp-controller="User" asp-action="Detail"
                                                asp-route-id="@user.User.Id">@user.User.Name @user.User.Surname</a>
                                        </div>
                                    }
                                }

                            }  
                    }
                        
                </div>
            </div>
        </div>
    </div>
</div>

</body>

</html>
